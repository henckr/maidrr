% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_pd.R
\name{get_pd}
\alias{get_pd}
\title{Get the partial dependence}
\usage{
get_pd(mfit, var, grid, data, subsample = nrow(data), fun = NULL, ...)
}
\arguments{
\item{mfit}{A fitted model object (e.g., a "gbm" or "randomForest" object).}

\item{var}{Character string giving the name of the predictor variable of
interest. For an interaction effect, specify as \code{"var1_var2"}. For now
only two-way interactions are supported, so do not specify more than two
variable names (i.e., only one underscore allowed in the string).}

\item{grid}{Data frame containing the joint values of interest for the
feature(s) listed in \code{var}. One column for main effects and two
columns for interaction effect where column names are the feature names.}

\item{data}{Data frame containing the original training data.}

\item{subsample}{An optional integer specifying the number of observations to
use for the computation of the partial dependencies. Defaults to the number
of observations in \code{data}, but a smaller value saves computation time.}

\item{fun}{Optional prediction function that requires two arguments:
\code{object} and \code{newdata}.}

\item{...}{Additional optional arguments to be passed onto
\code{\link[pdp:partial]{pdp::partial}}.}
}
\value{
A tidy data frame (i.e., a "tibble" object) with three (x, y, w) or
four (x1, x2, y, w) columns for respectively a marginal and two-way
interaction effect. Column(s) \code{x} contain variable values, column
\code{y} the partial dependence and \code{w} the observation counts in
\code{data}. The data frame attribute \code{comment} contains the variable
name, as specified in the \code{var} argument.
}
\description{
Compute partial dependence functions (i.e., marginal effects) for the
predictors in a model. Note that \code{get_pd} is based on
\code{\link[pdp:partial]{pdp::partial}} and adds observation weights.
}
\examples{
\dontrun{
data('mtpl_be')
features <- setdiff(names(mtpl_be),c('id', 'nclaims', 'expo'))
set.seed(12345)
gbm_fit <- gbm::gbm(as.formula(paste('nclaims ~',
                               paste(features, sep = ' ', collapse = ' + '))),
                    distribution = 'poisson',
                    data = mtpl_be,
                    n.trees = 50,
                    interaction.depth = 3,
                    shrinkage = 0.1)
gbm_fun <- function(object, newdata) mean(predict(object, newdata, n.trees = object$n.trees, type = 'response'))
gbm_fit \%>\% get_pd(var = 'ageph',
                   grid = data.frame('ageph' = 20:80),
                   data = mtpl_be,
                   subsample = 10000,
                   fun = gbm_fun)
gbm_fit \%>\% get_pd(var = 'power_coverage',
                   grid = expand.grid('power' = 40:90, 'coverage' = c('TPL', 'TPL+', 'TPL++')),
                   data = mtpl_be,
                   subsample = 10000,
                   fun = gbm_fun)
}
}
\seealso{
\code{\link[pdp]{partial}} and
\url{https://CRAN.R-project.org/package=pdp}.
}
