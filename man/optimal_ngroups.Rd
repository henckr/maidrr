% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimal_ngroups.R
\name{optimal_ngroups}
\alias{optimal_ngroups}
\title{Optimal number of groups}
\usage{
optimal_ngroups(
  pd,
  lambda,
  search_grid = seq_len(min(length(unique(pd$y)), 15))
)
}
\arguments{
\item{pd}{A data frame containing the partial dependence function as returned
by \code{\link{get_pd}}.}

\item{lambda}{The complexity parameter in the penalized loss function.}

\item{search_grid}{An integer vector containing the values to evaluate.}
}
\value{
An integer specifying the optimal number of groups. When multiple
groupings lead to the lowest loss, the smallest value is returned.
}
\description{
Determine the optimal number of groups for a feature.
}
\examples{
\dontrun{
data('mtpl_be')
features <- setdiff(names(mtpl_be),c('id', 'nclaims', 'expo'))
set.seed(12345)
gbm_fit <- gbm::gbm(as.formula(paste('nclaims ~',
                               paste(features, sep = ' ', collapse = ' + '))),
                    distribution = 'poisson',
                    data = mtpl_be,
                    n.trees = 50,
                    interaction.depth = 3,
                    shrinkage = 0.1)
gbm_fun <- function(object, newdata) mean(predict(object, newdata, n.trees = object$n.trees, type = 'response'))
gbm_fit \%>\% get_pd(var = 'ageph',
                   grid = data.frame('ageph' = 20:90),
                   data = mtpl_be,
                   subsample = 10000,
                   fun = gbm_fun) \%>\%
            optimal_ngroups(lambda = 0.01)
}
}
